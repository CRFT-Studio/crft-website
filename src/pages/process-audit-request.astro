---
export const prerender = false;

const out = Astro.redirect("/audit");
if (Astro.request.method !== "POST") return out;

const fields = ["First Name", "Last Name", "Work Email", "Website URL", "Role", "Notes"];
const formData = await Astro.request.formData();
const params = fields.reduce((a, c) => { a[c] = formData.get(c); return a; }, {});
if (!fields.filter(field => field !== "Notes").every(field => params[field])) return out;

/*
  TODOs:
    - add email validation
    - add url validation
    - fixup notification email to crft (cuz its shit rn)
    - send confirmation email to person requesting audit
*/

import { Resend } from 'resend';
const resend = new Resend(Astro.locals.runtime.env.RESEND_API ?? import.meta.env.RESEND_API);
await resend.batch.send([
  {
    from: 'audit@crft.studio',
    to: params["Work Email"],
    subject: `${params["First Name"]}, thanks for requesting a hero redesign!`,
    html: `<p>Hi ${params["First Name"]},</p>
    <p>Thanks for requesting a hero redesign of ${params["Website URL"]}. We'll have it ready for you within 3 business days. In the meantime, feel free to check out <a href="${Astro.url.origin}/audit#examples">examples of past redesigns</a> in case you haven't already, and reply to this email with any questions or comments you have.</p>
    <p>I look forward to hearing back,</p>
    <p>Jeremy<br>Founder @ CRFT Studio</p>`
  },
  {
    from: 'audit@crft.studio',
    to: 'jeremy@crft.studio',
    subject: `New audit request from ${params["First Name"]}`,
    html: `<p>First Name: ${params["First Name"]}<br>
    Last Name: ${params["Last Name"]}<br>
    Work Email: ${params["Work Email"]}<br>
    Website URL: ${params["Website URL"]}<br>
    Role: ${params["Role"]}<br>
    Notes: ${params["Notes"]}<br>
    </p>`,
  },
]);

return Astro.redirect("/success?" + new URLSearchParams(params));
---
