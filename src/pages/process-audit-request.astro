---
export const prerender = false;

const out = Astro.redirect("/audit");
if (Astro.request.method !== "POST") return out;

const fields = ["First Name", "Last Name", "Work Email", "Website URL", "Role", "Notes"];
const formData = await Astro.request.formData();
const params = fields.reduce((a, c) => { a[c] = formData.get(c); return a; }, {});
if (!fields.filter(field => field !== "Notes").every(field => params[field])) return out;

/*
  TODOs:
    - add email validation
    - add url validation
    - fixup notification email to crft (cuz its shit rn)
    - send confirmation email to person requesting audit
*/

import { Resend } from 'resend';
const resend = new Resend(Astro.locals.runtime.env.RESEND_API ?? import.meta.env.RESEND_API);
await resend.emails.send({
  from: 'jeremy@crft.studio',
  to: 'hi@crft.studio',
  subject: 'Thanks for requesting a website audit!',
  html: `<p>Thank you, ${params["First Name"]} ${params["Last Name"]}!</p>
  <p>We'll send a confirmation email to: ${params["Work Email"]}</p>
  <p>Website URL: ${params["Website URL"]}</p>
  <p>Role: ${params["Role"]}</p>
  <p>Notes: ${params["Notes"]}</p>`
});

return Astro.redirect("/success?" + new URLSearchParams(params));
---
