---
import Navigation from '../components/Navigation.astro';
import LookupCard from '../components/LookupCard.astro';
import HeadScripts from '../components/HeadScripts.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';
import authorsData from '../data/authors.json';
const {frontmatter} = Astro.props;
const {authors} = authorsData;
import Jeremy from '../images/jeremy-pfp.png';
import David from '../images/david-pfp.png';

const authorImages = {
    Jeremy: Jeremy,
    David: David
};
---
<!doctype html>
<html lang="en">
	<head>
    	<HeadScripts
    	title={`${frontmatter.title} | CRFT Studio`}
    	description={`${frontmatter.description} | CRFT Studio`}
    	ogImageUrl="https://www.crft.studio/open-graph-img.png"
    	/>
	</head>
	<body>
    	<Navigation/>
        <section class="mt-24">
            <div class="container">
                <div class="flex flex-row gap-2 mb-4">
                    <a class="text-orange-300" href="/blog">Blog</a>
                    <div> / </div>
                    <div class="text-neutral-400">Published on {frontmatter.pubDate}</div>
                </div>
                <h1 class="lg:text-4xl text-3xl font-semibold leading-tight mb-5 max-w-[800px] text-pretty">{frontmatter.title}</h1>
                <div class="flex flex-row flex-wrap lg:gap-8 gap-4 mb-7 items-center">
                    {frontmatter.author.map((authorName) => (
                        <div class="flex flex-row gap-2 items-center">
                            <Image
                                src={authorImages[authorName]}
                                alt={authors[authorName].name}
                                width={45}
                                height={45}
                                class="border aspect-square object-cover border-neutral-800"
                            />
                            <div>
                                <div class="font-normal text-neutral-200">By {authors[authorName].name}</div>
                                <div class="font-normal text-neutral-400">{authors[authorName].role}</div>
                            </div>
                        </div>
                    ))}
                </div>
                <div class="lg:grid lg:grid-cols-[1fr_0.2fr]">
                    <article class="prose prose-lg prose-blockquote:text-neutral-200 prose-strong:text-neutral-200 text-neutral-200 leading-normal prose-h2:text-2xl prose-h2:font-medium prose-h2:mb-4 prose-h2:mt-9 prose-headings:text-neutral-200 prose-a:text-orange-300 prose-a:font-normal prose-code:w-[90px]">
                        <slot/>
                    </article>
                    <aside>
                        <div id="sidebar" class="lg:pt-0 pt-7 lg:sticky lg:top-28">
                            <div id="toc" class="square-card p-0 border-0 lg:mb-5 mb-10 lg:max-h-[30vh] overflow-y-auto"></div>
                            <div class="lg:block hidden square-card bg-transparent relative overflow-hidden max-w-[300px] h-[365px]">
                                <div class="lg:max-w-[40ch] text-pretty mb-6">See the tech stack, pagespeed, sitemap and meta tags of the sites you're curious about.</div>
                                <a href="/lookup" class="primary-cta py-1">Scan a website (free) â†’</a>
                                <div class="max-w-[300px] mt-8 flex flex-row gap-4">
                                    <div class="flex flex-row gap-4 origin-top-left scale-[0.55]">
                                        <LookupCard url="tailwindcss.com" img="https://tailwindcss.com/opengraph-image.jpg?22502194f1a254bc" metaTitle="Tailwind CSS - Rapidly build modern websites without ever leaving your HTML" performance="75" accessibility="86" bestPractices="96" seo="91">
                                            <div class="flex flex-row gap-4 flex-wrap lg:text-base text-sm">
                                                <div class="flex flex-row gap-2 items-center">
                                                    <svg class="w-4 h-4 shrink-0" viewBox="0 0 569 512" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                                        <g fill="none" fill-rule="evenodd">
                                                            <g fill="#087EA4" fill-rule="nonzero">
                                                                <path d="M285.5,201 C255.400481,201 231,225.400481 231,255.5 C231,285.599519 255.400481,310 285.5,310 C315.599519,310 340,285.599519 340,255.5 C340,225.400481 315.599519,201 285.5,201" id="Path"></path>
                                                                <path d="M568.959856,255.99437 C568.959856,213.207656 529.337802,175.68144 466.251623,150.985214 C467.094645,145.423543 467.85738,139.922107 468.399323,134.521063 C474.621631,73.0415145 459.808523,28.6686204 426.709856,9.5541429 C389.677085,-11.8291748 337.36955,3.69129898 284.479928,46.0162134 C231.590306,3.69129898 179.282771,-11.8291748 142.25,9.5541429 C109.151333,28.6686204 94.3382249,73.0415145 100.560533,134.521063 C101.102476,139.922107 101.845139,145.443621 102.708233,151.02537 C97.4493791,153.033193 92.2908847,155.161486 87.3331099,157.39017 C31.0111824,182.708821 0,217.765415 0,255.99437 C0,298.781084 39.6220545,336.307301 102.708233,361.003527 C101.845139,366.565197 101.102476,372.066633 100.560533,377.467678 C94.3382249,438.947226 109.151333,483.32012 142.25,502.434597 C153.629683,508.887578 166.52439,512.186771 179.603923,511.991836 C210.956328,511.991836 247.567589,495.487529 284.479928,465.972527 C321.372196,495.487529 358.003528,511.991836 389.396077,511.991836 C402.475265,512.183856 415.36922,508.884856 426.75,502.434597 C459.848667,483.32012 474.661775,438.947226 468.439467,377.467678 C467.897524,372.066633 467.134789,366.565197 466.291767,361.003527 C529.377946,336.347457 569,298.761006 569,255.99437 M389.155214,27.1025182 C397.565154,26.899606 405.877839,28.9368502 413.241569,33.0055186 C436.223966,46.2772304 446.540955,82.2775015 441.522965,131.770345 C441.181741,135.143488 440.780302,138.556788 440.298575,141.990165 C414.066922,134.08804 387.205771,128.452154 360.010724,125.144528 C343.525021,103.224055 325.192524,82.7564475 305.214266,63.9661533 C336.586743,39.7116483 366.032313,27.1025182 389.135142,27.1025182 M378.356498,310.205598 C368.204912,327.830733 357.150626,344.919965 345.237759,361.405091 C325.045049,363.479997 304.758818,364.51205 284.459856,364.497299 C264.167589,364.51136 243.888075,363.479308 223.702025,361.405091 C211.820914,344.919381 200.80007,327.83006 190.683646,310.205598 C180.532593,292.629285 171.306974,274.534187 163.044553,255.99437 C171.306974,237.454554 180.532593,219.359455 190.683646,201.783142 C200.784121,184.229367 211.770999,167.201087 223.601665,150.764353 C243.824636,148.63809 264.145559,147.579168 284.479928,147.591877 C304.772146,147.579725 325.051559,148.611772 345.237759,150.68404 C357.109048,167.14607 368.136094,184.201112 378.27621,201.783142 C388.419418,219.363718 397.644825,237.458403 405.915303,255.99437 C397.644825,274.530337 388.419418,292.625022 378.27621,310.205598 M419.724813,290.127366 C426.09516,307.503536 431.324985,325.277083 435.380944,343.334682 C417.779633,348.823635 399.836793,353.149774 381.668372,356.285142 C388.573127,345.871232 395.263781,335.035679 401.740334,323.778483 C408.143291,312.655143 414.144807,301.431411 419.805101,290.207679 M246.363271,390.377981 C258.848032,391.140954 271.593728,391.582675 284.5,391.582675 C297.406272,391.582675 310.232256,391.140954 322.737089,390.377981 C310.880643,404.583418 298.10766,417.997563 284.5,430.534446 C270.921643,417.999548 258.18192,404.585125 246.363271,390.377981 Z M187.311556,356.244986 C169.137286,353.123646 151.187726,348.810918 133.578912,343.334682 C137.618549,325.305649 142.828222,307.559058 149.174827,290.207679 C154.754833,301.431411 160.736278,312.655143 167.239594,323.778483 C173.74291,334.901824 180.467017,345.864539 187.311556,356.285142 M149.174827,221.760984 C142.850954,204.473938 137.654787,186.794745 133.619056,168.834762 C151.18418,163.352378 169.085653,159.013101 187.211197,155.844146 C180.346585,166.224592 173.622478,176.986525 167.139234,188.210257 C160.65599,199.433989 154.734761,210.517173 149.074467,221.760984 M322.616657,121.590681 C310.131896,120.827708 297.3862,120.385987 284.379568,120.385987 C271.479987,120.385987 258.767744,120.787552 246.242839,121.590681 C258.061488,107.383537 270.801211,93.9691137 284.379568,81.4342157 C297.99241,93.9658277 310.765727,107.380324 322.616657,121.590681 Z M401.70019,188.210257 C395.196875,176.939676 388.472767,166.09743 381.527868,155.68352 C399.744224,158.819049 417.734224,163.151949 435.380944,168.654058 C431.331963,186.680673 426.122466,204.426664 419.785029,221.781062 C414.205023,210.55733 408.203506,199.333598 401.720262,188.230335 M127.517179,131.790423 C122.438973,82.3176579 132.816178,46.2973086 155.778503,33.0255968 C163.144699,28.9632474 171.455651,26.9264282 179.864858,27.1225964 C202.967687,27.1225964 232.413257,39.7317265 263.785734,63.9862316 C243.794133,82.7898734 225.448298,103.270812 208.949132,125.204763 C181.761691,128.528025 154.90355,134.14313 128.661281,141.990165 C128.199626,138.556788 127.778115,135.163566 127.456963,131.790423 M98.4529773,182.106474 C101.54406,180.767925 104.695358,179.429376 107.906872,178.090828 C114.220532,204.735668 122.781793,230.7969 133.498624,255.99437 C122.761529,281.241316 114.193296,307.357063 107.8868,334.058539 C56.7434387,313.076786 27.0971497,284.003505 27.0971497,255.99437 C27.0971497,229.450947 53.1907013,202.526037 98.4529773,182.106474 Z M155.778503,478.963143 C132.816178,465.691432 122.438973,429.671082 127.517179,380.198317 C127.838331,376.825174 128.259842,373.431953 128.721497,369.978497 C154.953686,377.878517 181.814655,383.514365 209.009348,386.824134 C225.500295,408.752719 243.832321,429.233234 263.805806,448.042665 C220.069,481.834331 180.105722,492.97775 155.838719,478.963143 M441.502893,380.198317 C446.520883,429.691161 436.203894,465.691432 413.221497,478.963143 C388.974566,493.017906 348.991216,481.834331 305.274481,448.042665 C325.241364,429.232737 343.566681,408.752215 360.050868,386.824134 C387.245915,383.516508 414.107066,377.880622 440.338719,369.978497 C440.820446,373.431953 441.221885,376.825174 441.563109,380.198317 M461.193488,334.018382 C454.869166,307.332523 446.294494,281.231049 435.561592,255.99437 C446.289797,230.744081 454.857778,204.629101 461.173416,177.930202 C512.216417,198.911955 541.942994,227.985236 541.942994,255.99437 C541.942994,284.003505 512.296705,313.076786 461.153344,334.058539" id="Shape"></path>
                                                            </g>
                                                        </g>
                                                    </svg>
                                                    <div>React</div>
                                                </div>
                                                <div class="flex flex-row gap-2 items-center">
                                                    <svg class="w-4 h-4 shrink-0" viewBox="0 0 180 180" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <mask id="mask0_408_139" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="180" height="180">
                                                        <circle cx="90" cy="90" r="90" fill="black"/>
                                                        </mask>
                                                        <g mask="url(#mask0_408_139)">
                                                        <circle cx="90" cy="90" r="87" fill="black" stroke="white" stroke-width="6"/>
                                                        <path d="M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z" fill="url(#paint0_linear_408_139)"/>
                                                        <rect x="115" y="54" width="12" height="72" fill="url(#paint1_linear_408_139)"/>
                                                        </g>
                                                        <defs>
                                                        <linearGradient id="paint0_linear_408_139" x1="109" y1="116.5" x2="144.5" y2="160.5" gradientUnits="userSpaceOnUse">
                                                        <stop stop-color="white"/>
                                                        <stop offset="1" stop-color="white" stop-opacity="0"/>
                                                        </linearGradient>
                                                        <linearGradient id="paint1_linear_408_139" x1="121" y1="54" x2="120.799" y2="106.875" gradientUnits="userSpaceOnUse">
                                                        <stop stop-color="white"/>
                                                        <stop offset="1" stop-color="white" stop-opacity="0"/>
                                                        </linearGradient>
                                                        </defs>
                                                    </svg>
                                                    <div>NextJS</div>
                                                </div>
                                            </div>
                                        </LookupCard>
                                        <LookupCard url="crft.studio" img="https://www.crft.studio/open-graph-img.png" metaTitle="CRFT Studio | Marketing Sites Built to Convert" performance="88" accessibility="79" bestPractices="96" seo="100">
                                            <div class="flex flex-row gap-4 flex-wrap lg:text-base text-sm">
                                            <div class="flex flex-row gap-2 items-center">
                                                <svg class="w-4 h-4" viewBox="0 0 256 366" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid"><path fill="#FFFFFF" d="M182.022 9.147c2.982 3.702 4.502 8.697 7.543 18.687L256 246.074a276.467 276.467 0 0 0-79.426-26.891L133.318 73.008a5.63 5.63 0 0 0-10.802.017L79.784 219.11A276.453 276.453 0 0 0 0 246.04L66.76 27.783c3.051-9.972 4.577-14.959 7.559-18.654a24.541 24.541 0 0 1 9.946-7.358C88.67 0 93.885 0 104.314 0h47.683c10.443 0 15.664 0 20.074 1.774a24.545 24.545 0 0 1 9.95 7.373Z"/><path fill="#FF5D01" d="M189.972 256.46c-10.952 9.364-32.812 15.751-57.992 15.751-30.904 0-56.807-9.621-63.68-22.56-2.458 7.415-3.009 15.903-3.009 21.324 0 0-1.619 26.623 16.898 45.14 0-9.615 7.795-17.41 17.41-17.41 16.48 0 16.46 14.378 16.446 26.043l-.001 1.041c0 17.705 10.82 32.883 26.21 39.28a35.685 35.685 0 0 1-3.588-15.647c0-16.886 9.913-23.173 21.435-30.48 9.167-5.814 19.353-12.274 26.372-25.232a47.588 47.588 0 0 0 5.742-22.735c0-5.06-.786-9.938-2.243-14.516Z"/></svg>
                                                <div>Astro</div>
                                            </div>
                                                <div class="flex flex-row gap-2 items-center">
                                                <svg viewBox="0 0 256 222" class="w-4 h-4 fill-white" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid"><path d="m128 0 128 221.705H0z"/></svg>
                                                <div>Vercel</div>
                                                </div>
                                            </div>
                                        </LookupCard>
                                        <LookupCard url="basecamp.com" img="https://basecamp.com/assets/images/opengraph/basecamp.png?1740691981" metaTitle="Basecamp: Project management software, online collaboration" performance="93" accessibility="100" bestPractices="100" seo="100">
                                            <div class="flex flex-row gap-2 items-center">
                                                <svg class="w-4 h-4 shrink-0" viewBox="0 0 256 116" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid"><path fill="#FFF" d="m202.357 49.394-5.311-2.124C172.085 103.434 72.786 69.289 66.81 85.997c-.996 11.286 54.227 2.146 93.706 4.059 12.039.583 18.076 9.671 12.964 24.484l10.069.031c11.615-36.209 48.683-17.73 50.232-29.68-2.545-7.857-42.601 0-31.425-35.497Z"/><path fill="#F4811F" d="M176.332 108.348c1.593-5.31 1.062-10.622-1.593-13.809-2.656-3.187-6.374-5.31-11.154-5.842L71.17 87.634c-.531 0-1.062-.53-1.593-.53-.531-.532-.531-1.063 0-1.594.531-1.062 1.062-1.594 2.124-1.594l92.946-1.062c11.154-.53 22.839-9.56 27.087-20.182l5.312-13.809c0-.532.531-1.063 0-1.594C191.203 20.182 166.772 0 138.091 0 111.535 0 88.697 16.995 80.73 40.896c-5.311-3.718-11.684-5.843-19.12-5.31-12.747 1.061-22.838 11.683-24.432 24.43-.531 3.187 0 6.374.532 9.56C16.996 70.107 0 87.103 0 108.348c0 2.124 0 3.718.531 5.842 0 1.063 1.062 1.594 1.594 1.594h170.489c1.062 0 2.125-.53 2.125-1.594l1.593-5.842Z"/><path fill="#FAAD3F" d="M205.544 48.863h-2.656c-.531 0-1.062.53-1.593 1.062l-3.718 12.747c-1.593 5.31-1.062 10.623 1.594 13.809 2.655 3.187 6.373 5.31 11.153 5.843l19.652 1.062c.53 0 1.062.53 1.593.53.53.532.53 1.063 0 1.594-.531 1.063-1.062 1.594-2.125 1.594l-20.182 1.062c-11.154.53-22.838 9.56-27.087 20.182l-1.063 4.78c-.531.532 0 1.594 1.063 1.594h70.108c1.062 0 1.593-.531 1.593-1.593 1.062-4.25 2.124-9.03 2.124-13.81 0-27.618-22.838-50.456-50.456-50.456"/></svg>
                                                <div>Cloudflare</div>
                                            </div>
                                        </LookupCard>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </aside>
                </div>
            </div>
        </section>
        <script>
        import $ from 'jquery';

        function generateHeadings() {
            const article = document.querySelector('article');
            if (!article) return [];

            const headingElements = article.querySelectorAll('h2');
            const headings = Array.from(headingElements).map(heading => ({
                depth: parseInt(heading.tagName[1]), // Get the heading level (2 or 3)
                slug: heading.id || heading.textContent.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, ''),
                text: heading.textContent
            }));

            // Set IDs for headings that don't have them
            headingElements.forEach((heading, index) => {
                if (!heading.id) {
                    heading.id = headings[index].slug;
                }
            });

            return headings;
        }

        const moveTocOnMobile = () => {
            if ($(window).width() < 1024) {
                $("#toc").insertBefore("h2:first");
            } else {
                $("#toc").prependTo("#sidebar");
            }
        };

        // Initialize TOC when document is ready
        $(document).ready(() => {
            const headings = generateHeadings();
            const tocContainer = document.querySelector('#toc');

            if (tocContainer) {
                // Hide TOC if no headings are found
                if (headings.length === 0) {
                    tocContainer.style.display = 'none';
                    return;
                }

                const tocHtml = `
                    <div class="p-3 px-4 border border-neutral-700 shadow-md">
                        <div class="text-lg mb-2">Table of contents</div>
                        <div class="mt-4 flex flex-col gap-2 text-neutral-300">
                            ${headings.map(heading => `
                                <div class="${heading.depth === 2 ? 'pl-0' : 'pl-3'}">
                                    <a href="#${heading.slug}" class="toc-link transition hover:text-orange-300">
                                        ${heading.text}
                                    </a>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `;
                tocContainer.innerHTML = tocHtml;
            }

            // Set up intersection observer for highlighting current section
            const observerOptions = {
                root: null,
                rootMargin: "0px 0px -50% 0px",
                threshold: [1],
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        document.querySelectorAll('.toc-link').forEach(link => link.classList.remove('toc-current'));
                        const targetLink = document.querySelector(`a[href="#${entry.target.id}"].toc-link`);
                        if (targetLink) targetLink.classList.add('toc-current');
                    }
                });
            }, observerOptions);

            document.querySelectorAll('h2, h3').forEach(heading => {
                heading.classList.add('scroll-mt-24');
                observer.observe(heading);
            });

            moveTocOnMobile();

            // Wrap tables in overflow-auto divs
            $('article table').each(function() {
                if (!$(this).parent().hasClass('overflow-auto')) {
                    $(this).wrap('<div class="overflow-auto"></div>');
                }
            });
        });

        $(window).resize(moveTocOnMobile);
        </script>

        <style>
        @reference "../styles/global.css";
        .toc-current {
            @apply text-orange-300;
        }
        </style>
        <Footer/>
	</body>
</html>
