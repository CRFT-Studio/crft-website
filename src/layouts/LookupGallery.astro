---
import HeadScripts from "../components/HeadScripts.astro";
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";

// Define displayed tech categories here - this will be used across all gallery pages
export const displayedTechCategories = [
    'JavaScript frameworks',
    'PaaS'
];

interface Company {
    name: string;
    metaTitle: string;
    description: string;
    websiteUrl: string;
    ogImageUrl: string;
}

interface LighthouseScores {
    performance: number;
    seo: number;
    bestPractices: number;
    accessibility: number;
}

interface Lighthouse {
    desktop: LighthouseScores;
    mobile: LighthouseScores;
}

// Simplified Wappalyzer interface since data comes pre-processed
interface Props {
    company: Company;
    lighthouse: Lighthouse;
    techByCategory: Record<string, Array<{
        name: string;
        description?: string;
        website?: string;
        icon?: string;
    }>>;
}

const { company, lighthouse, techByCategory } = Astro.props;

// Define metrics for Lighthouse section
const metrics = [
    { key: 'performance', label: 'Performance' },
    { key: 'accessibility', label: 'Accessibility' },
    { key: 'bestPractices', label: 'Best Practices' },
    { key: 'seo', label: 'SEO' }
];

// Filter tech categories based on displayedTechCategories
const filteredTechByCategory = Object.entries(techByCategory)
    .filter(([category]) => displayedTechCategories.includes(category))
    .reduce((acc, [category, techs]) => {
        acc[category] = techs;
        return acc;
    }, {});
---

<html lang="en">
    <head>
        <HeadScripts
            title={`${company.name} - Technology Stack | CRFT Lookup`}
            description={`Explore the technology stack and performance metrics of ${company.name}`}
            ogImage={company.ogImageUrl}
        />
        <style>
            @reference "../styles/global.css";
            #overview-tabs div {
                @apply border-transparent;
            }
            .tab-active {
                border-color: #525252 !important;
                @apply bg-neutral-700;
            }
            [hidden] {
                display: none;
            }
        </style>
    </head>
    <body>
        <Navigation/>
        <section class="mt-16">
            <div class="container">
                <div class="flex flex-row flex-wrap gap-4 justify-between items-center mb-3">
                    <div class="lg:flex hidden flex-row flex-wrap gap-2 items-center">
                        <a href="/lookup">CRFT Lookup</a>
                        <svg class="w-5 h-5 translate-y-[2px]" fill="#D4D4D4" xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960"><path d="m517.85-480-184-184L376-706.15 602.15-480 376-253.85 333.85-296l184-184Z"/></svg>
                        <a href="/lookup/gallery">Gallery</a>
                        <svg class="w-5 h-5 translate-y-[2px]" fill="#D4D4D4" xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960"><path d="m517.85-480-184-184L376-706.15 602.15-480 376-253.85 333.85-296l184-184Z"/></svg>
                        <a class="text-orange-300" href="">{company.name}</a>
                    </div>
                    <div class="lg:hidden flex flex-row gap-1 items-center text-orange-300">
                        <svg class="w-5 h-5 translate-y-[2px] rotate-180" fill="#FFB86A" xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960"><path d="m517.85-480-184-184L376-706.15 602.15-480 376-253.85 333.85-296l184-184Z"/></svg>
                        <div>CRFT Lookup</div>
                    </div>
                    <div class="text-neutral-400">
                        <div>Scanned on 09/24/26</div>
                    </div>
                </div>

                <img src={company.ogImageUrl} alt={`${company.name} website screenshot`} class="w-full aspect-video object-cover mb-8 border border-neutral-600" />

                <div class="flex flex-row justify-between flex-wrap gap-11 w-full mb-12 items-start">
                    <div class="max-w-[500px]">
                        <div class="text-2xl font-medium mb-2">{company.name}</div>
                        <div class="text-neutral-300">{company.description}</div>
                        <div class="flex flex-row flex-wrap gap-2 items-center">
                            <a href={company.websiteUrl} target="_blank" class="primary-cta mt-5 py-1 px-2">Visit website</a>
                            <a href="/lookup" class="secondary-cta mt-5 py-1 px-2 border-neutral-600">Generate full report</a>
                        </div>
                    </div>

                    <!-- Lighthouse Scores -->
                    <div id="lighthouse-overview" class="flex flex-col gap-2">
                        <div class="flex justify-start">
                            <div id="overview-tabs" class="inline-flex flex-row square-card p-[2px] border-[1px] gap-2 text-sm text-nowrap">
                                <div id="desktop-overview-tab" class="tab-active border-[1px] px-2 py-1 hover:cursor-pointer transition-all">Desktop</div>
                                <div id="mobile-overview-tab" class="px-2 py-1 border-[1px] hover:cursor-pointer transition-all">Mobile</div>
                            </div>
                        </div>

                        <div id="lighthouse-overview-desktop" class="flex flex-row flex-wrap gap-2">
                            {metrics.map(metric => (
                                <div class="square-card p-0">
                                    <div class="bg-neutral-600 text-center px-5">{metric.label}</div>
                                    <div class="text-center text-3xl font-medium">
                                        {metric.key
                                            ? lighthouse.desktop[metric.key]
                                            : lighthouse.desktop[metric.key.toLowerCase()]}
                                    </div>
                                </div>
                            ))}
                        </div>

                        <div id="lighthouse-overview-mobile" class="flex flex-row flex-wrap gap-2" hidden>
                            {metrics.map(metric => (
                                <div class="square-card p-0">
                                    <div class="bg-neutral-600 text-center px-5">{metric.label}</div>
                                    <div class="text-center text-3xl font-medium">
                                        {metric.key
                                            ? lighthouse.mobile[metric.key]
                                            : lighthouse.mobile[metric.key.toLowerCase()]}
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>

                <div class="h-[1px] w-full mt-20 mb-20 bg-gradient-to-r from-transparent via-neutral-700 to-transparent"></div>

                <!-- Technology Stack -->
                <div class="mt-12">
                    <h2 class="text-2xl font-medium mb-8">Technology Stack</h2>
                    <div class="flex flex-col gap-8">
                        {Object.entries(techByCategory).map(([category, techs]) => (
                            <div data-category={category}>
                                <h3 class="text-xl font-medium mb-4">{category}</h3>
                                <div class="grid lg:grid-cols-2 gap-4">
                                    {techs.map((tech) => (
                                        <a href={tech.website ? `${tech.website}?ref=crftlookup` : '#'}
                                           target="_blank"
                                           class="flex flex-col gap-2 square-card p-4 relative hover:bg-neutral-700 transition-all">
                                            <div class="flex flex-row gap-2 items-center">
                                                {tech.icon && <img src={`/icons/${tech.icon}`} class="w-5 h-5" alt="" />}
                                                <div>{tech.name}</div>
                                            </div>
                                            {tech.description && <div class="text-pretty">{tech.description}</div>}
                                            {tech.website && <svg class="absolute top-0 right-0 mt-3 mr-3" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#e8eaed"><path d="m216-160-56-56 464-464H360v-80h400v400h-80v-264L216-160Z"/></svg>}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                <div class="h-[1px] w-full mt-20 mb-20 bg-gradient-to-r from-transparent via-neutral-700 to-transparent"></div>

                <div class="grid grid-cols-3 gap-4">
                    <div class="square-card p-0">
                        <div class="square-card p-0 mb-2 border-0 border-b">
                            <img class="aspect-video" src={company.ogImageUrl}></img>
                        </div>
                        <div class="p-0">
                            <div class="px-4 flex flex-row justify-between gap-7 items-center mb-3">
                                <div>
                                    <div class="text-lg">{company.name}</div>
                                </div>
                                <svg xmlns="http://www.w3.org/2000/svg" height="24px" width="24px" viewBox="0 -960 960 960" fill="#FFFFFF"><path d="M251.77-254.23 210-296l393.62-394H245.77v-60h460v460h-60v-357.85l-394 393.62Z"/></svg>
                            </div>
                            <div>
                                <div class="square-card p-1 border-0 border-t">
                                    <div class="square-card p-1 py-0 inline-flex flex-row items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="20px" width="20px" viewBox="0 -960 960 960" fill="#FFFFFF"><path d="M293.46-99.62 454.23-390 140-428.08l465-432.3h62.31l-162.7 290.77L820-531.92 355-99.62h-61.54Zm167.77-183.53 224.08-204.39-275.92-32.85L498.93-677 274.69-472.23l274.92 33.38-88.38 155.7ZM480-480.38Z"/></svg>
                                        <div>96</div>
                                    </div>
                                    <div class="square-card p-1 py-0 inline-flex flex-row items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 -960 960 960" width="20px" fill="#FFFFFF"><path d="M479.75-700.62q-32.21 0-54.9-22.94-22.7-22.94-22.7-55.15 0-32.21 22.94-54.9 22.94-22.7 55.16-22.7 32.21 0 54.9 22.94 22.7 22.94 22.7 55.16 0 32.21-22.94 54.9-22.94 22.69-55.16 22.69ZM376.16-118v-457.54H163.23v-52h633.54v52H583.84V-118h-51.99l-9-210h-84.7l-10 210h-51.99Z"/></svg>
                                        <div>96</div>
                                    </div>
                                    <div class="square-card p-1 py-0 inline-flex flex-row items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 -960 960 960" width="20px" fill="#FFFFFF"><path d="M336-253.85 109.85-480 336-706.15l36.77 36.77-189 189L373.15-291 336-253.85Zm288 0-36.77-36.77 189-189L586.85-669 624-706.15 850.15-480 624-253.85Z"/></svg>
                                        <div>96</div>
                                    </div>
                                    <div class="square-card p-1 py-0 inline-flex flex-row items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 -960 960 960" width="20px" fill="#FFFFFF"><path d="M762.69-160.92 524.46-399.16q-30 22.77-65.79 35.27-35.79 12.5-73.87 12.5-93.58 0-159.11-65.51-65.53-65.51-65.53-159.04 0-93.52 65.51-159.1 65.51-65.57 159.04-65.57 93.52 0 159.1 65.53 65.57 65.53 65.57 159.11 0 39.23-12.88 75.02-12.89 35.8-34.89 64.64l238.23 238.23-37.15 37.16ZM384.77-403.38q72.31 0 122.46-50.16 50.16-50.15 50.16-122.46t-50.16-122.46q-50.15-50.16-122.46-50.16t-122.46 50.16Q212.15-648.31 212.15-576t50.16 122.46q50.15 50.16 122.46 50.16Z"/></svg>
                                        <div>96</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <Footer/>

        <script>
            function getColorClasses(score) {
                if (score >= 90) return { bg: 'bg-green-600', text: 'text-green-600', lightBg: 'bg-green-300' };
                if (score >= 50) return { bg: 'bg-yellow-600', text: 'text-yellow-600', lightBg: 'bg-yellow-300' };
                return { bg: 'bg-red-600', text: 'text-red-600', lightBg: 'bg-red-300' };
            }

            function updateScoreColors(viewerId) {
                const overview = document.getElementById(viewerId);
                const cards = overview.querySelectorAll('.square-card');

                cards.forEach(card => {
                    const score = parseInt(card.querySelector('.text-3xl').textContent);
                    const colors = getColorClasses(score);

                    const headerDiv = card.querySelector('div:first-child');
                    const scoreDiv = card.querySelector('div:last-child');

                    headerDiv.className = `${colors.bg} text-center px-2`;
                    scoreDiv.className = `text-center text-3xl px-3 ${colors.lightBg} ${colors.text} font-medium`;
                });
            }

            document.addEventListener('DOMContentLoaded', () => {
                // Initialize colors for both views
                updateScoreColors('lighthouse-overview-desktop');
                updateScoreColors('lighthouse-overview-mobile');

                // Set up tab switching
                const desktopTab = document.getElementById('desktop-overview-tab');
                const mobileTab = document.getElementById('mobile-overview-tab');
                const desktopView = document.getElementById('lighthouse-overview-desktop');
                const mobileView = document.getElementById('lighthouse-overview-mobile');

                desktopTab.addEventListener('click', () => {
                    desktopTab.classList.add('tab-active');
                    mobileTab.classList.remove('tab-active');
                    desktopView.removeAttribute('hidden');
                    mobileView.setAttribute('hidden', '');
                });

                mobileTab.addEventListener('click', () => {
                    mobileTab.classList.add('tab-active');
                    desktopTab.classList.remove('tab-active');
                    mobileView.removeAttribute('hidden');
                    desktopView.setAttribute('hidden', '');
                });
            });
        </script>
    </body>
</html>
